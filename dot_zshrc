# setopt interactivecomments
bindkey -e
set -kJ
# fastfetch
#
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi


if type "brew" &> /dev/null; then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

FPATH="${HOME}/.zfunc:${FPATH}"


[[ -d "$HOME/.antidote" ]] || git clone --depth=1 https://github.com/mattmc3/antidote.git ${ZDOTDIR:-~}/.antidote

source ~/.antidote/antidote.zsh
antidote load ${ZDOTDIR:-$HOME}/.zsh_plugins.txt

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# autoload -Uz promptinit && promptinit && prompt powerlevel10k

type fzf &> /dev/null && eval "$(fzf --zsh)"

[[ -f "$HOME/.cargo/env" ]] && . "$HOME/.cargo/env"


if [[ -d "$HOME/.zsh" ]]; then
  for src in $HOME/.zsh/*.zsh; do
    source $src
  done
fi


type direnv &> /dev/null && eval "$(direnv hook zsh)"

# if (( $LINES < 25 )); then
#   zstyle -e ':autocomplete:*:*' list-lines 'reply=( $(( LINES / 3 )) )'
# fi

type atuin &> /dev/null && eval "$(atuin init zsh)"

# if [[ -v NVIM ]]; then
#   zstyle -e ':autocomplete:*:*' list-lines 'reply=( $(( LINES / 3 )) )'
# fi

# autoload -Uz compinit && compinit
# zmodload -i zsh/complist
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
zstyle ':fzf-tab:*' switch-group '<' '>'

# (( $RANDOM % 10 == 0 )) && fastfetch

# Added by LM Studio CLI (lms)
export PATH="$PATH:/Users/andreigavrilov/.cache/lm-studio/bin"

# BEGIN opam configuration
# This is useful if you're using opam as it adds:
#   - the correct directories to the PATH
#   - auto-completion for the opam binary
# This section can be safely removed at any time if needed.
[[ ! -r '/home/kwqcheii/.opam/opam-init/init.zsh' ]] || source '/home/kwqcheii/.opam/opam-init/init.zsh' > /dev/null 2> /dev/null
# END opam configuration

# bun completions
[ -s "/home/kwqcheii/.bun/_bun" ] && source "/home/kwqcheii/.bun/_bun"

# should be kept last
type zoxide &> /dev/null && eval "$(zoxide init zsh)"

eval "$(starship init zsh)"

### Added by Zinit's installer
# if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
#     print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
#     command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
#     command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
#         print -P "%F{33} %F{34}Installation successful.%f%b" || \
#         print -P "%F{160} The clone has failed.%f%b"
# fi
#
# source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
# autoload -Uz _zinit
# (( ${+_comps} )) && _comps[zinit]=_zinit
# ### End of Zinit's installer chunk


#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
